version: "3.9"

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "5656:5656"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/letsencrypt:/letsencrypt
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/:/var/traefik/
    labels:
      - traefik.enable=true

      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`traefik.mgjules.dev`)"
      - traefik.http.routers.dashboard.service=dashboard@internal
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=certresolver"
      - traefik.http.routers.dashboard.middlewares=auth

      # Api
      - "traefik.http.routers.api.rule=Host(`traefik.mgjules.dev`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=certresolver"
      - traefik.http.routers.api.middlewares=auth

      # Middlewares
      - "traefik.http.middlewares.auth.basicauth.users=mike:{SHA}S6ZS14HTJKY7DmsMkmQwN2vnsGU="

  traefik-certs-dumper:
    image: ldez/traefik-certs-dumper:v2.8.1
    container_name: traefik-certs-dumper
    entrypoint: sh -c '
      apk add jq
      ; while ! [ -e /data/acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --domain-subdir --watch
        --crt-name=fullchain --crt-ext=.pem --key-name=privkey --key-ext=.pem
        --source /data/acme.json --dest /data/certs
        --post-hook "sh /hook.sh"'
    volumes:
      - ./traefik/letsencrypt:/data
      - ./hook.sh:/hook.sh
    depends_on:
      - traefik

  myspace:
    image: julesmike/myspace:v1
    restart: unless-stopped
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.myspace.rule=Host(`mgjules.dev`)
      - traefik.http.routers.myspace.entrypoints=websecure
      - traefik.http.services.myspace.loadbalancer.server.port=80
      - traefik.http.services.myspace.loadbalancer.server.scheme=http
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      retries: 2
      start_period: 10s
      timeout: 2s
    depends_on:
      - traefik
      - edgedb

  edgedb:
    image: edgedb/edgedb:2
    restart: unless-stopped
    hostname: "edgy.mgjules.dev"
    env_file:
      .env.edgedb
    volumes:
      - "./edgedb/data:/var/lib/edgedb/data"
      - "./edgedb/dbschema:/dbschema"
      - "./traefik:/traefik"
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.edgedb.rule=HostSNI(`edgy.mgjules.dev`)
      - traefik.tcp.routers.edgedb.entrypoints=edgedb
      - traefik.tcp.routers.edgedb.tls=true
      - traefik.tcp.routers.edgedb.tls.passthrough=true
    healthcheck:
      test: ["CMD", "curl", "-f", "https://edgy.mgjules.dev:5656/ui"]
      interval: 5s
      retries: 2
      start_period: 30s
      timeout: 2s
    depends_on:
      - traefik
      - traefik-certs-dumper

  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
