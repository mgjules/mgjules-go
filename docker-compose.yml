version: "3"

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      - --accesslog.filepath=/var/traefik/access.log

      # HTTP
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure

      # HTTPs
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certresolver=certresolver

      # Certificate resolver
      - --certificatesresolvers.certresolver.acme.httpchallenge=true
      - --certificatesresolvers.certresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.certresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.certresolver.acme.email=julesmichaelgiovanni@gmail.com
      - --certificatesresolvers.certresolver.acme.storage=/letsencrypt/acme.json
      - --log.level=INFO
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/letsencrypt:/letsencrypt
      - ./traefik/:/var/traefik/
    labels:
      - traefik.enable=true

      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`traefik.mgjules.dev`)"
      - traefik.http.routers.dashboard.service=dashboard@internal
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=certresolver"
      - traefik.http.routers.dashboard.middlewares=auth

      # Api
      - "traefik.http.routers.api.rule=Host(`traefik.mgjules.dev`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=certresolver"
      - traefik.http.routers.api.middlewares=auth

      # Middlewares
      - "traefik.http.middlewares.auth.basicauth.users=mike:{SHA}S6ZS14HTJKY7DmsMkmQwN2vnsGU="

  myspace:
    image: julesmike/myspace:v1
    restart: unless-stopped
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.myspace.rule=Host(`mgjules.dev`)
      - traefik.http.routers.myspace.entrypoints=websecure
      - traefik.http.services.myspace.loadbalancer.server.port=80
      - traefik.http.services.myspace.loadbalancer.server.scheme=http
    depends_on:
      - traefik

  # edgedb:
  #   image: edgedb/edgedb
  #   restart: unless-stopped
  #   env_file:
  #     .env
  #   volumes:
  #     - "./edgedb/data:/var/lib/edgedb/data"
  #     - "./edgedb/dbschema:/dbschema"
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.edgedb.rule=Host(`edgy2.mgjules.dev`)
  #     - traefik.http.routers.edgedb.entrypoints=websecure
  #     - traefik.http.services.edgedb.loadbalancer.server.port=5656
  #     - traefik.http.services.edgedb.loadbalancer.server.scheme=https
  #   depends_on:
  #     - traefik

  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
